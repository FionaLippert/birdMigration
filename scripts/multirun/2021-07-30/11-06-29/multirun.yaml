hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    hydra_help: ???
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
  output_subdir: .hydra
  overrides:
    hydra: []
    task:
    - model=LocalMLP,LocalLSTM
    - +hp_search_space=LocalNNs
    - +task=innerCV
  job:
    name: run_nested_cv
    override_dirname: +hp_search_space=LocalNNs,+task=innerCV,model=LocalMLP,LocalLSTM
    id: ???
    num: ???
    config_name: config
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.0.6
    cwd: /home/flippert/birdMigration/scripts
  verbose: false
root: /home/flippert/birdMigration
output_dir: results
job_id: 0
season: fall
seed: 1234
model_seed: ${seed}
cuda: true
root_transform: 0
missing_data_threshold: 0.1
t_unit: 1H
use_nights: true
data_perc: 1.0
exclude: []
verbose: true
debugging: false
datasource:
  name: radar
  years:
  - 2015
  - 2016
  - 2017
  test_year: 2015
  val_train_split: 0.1
  env_vars:
  - u
  - v
  - cc
  - tp
  - sp
  - t2m
  - sshf
  - solarpos
  - solarpos_dt
  - night
  - dusk
  - dawn
  use_buffers: true
  bird_scale: ???
model:
  name: BirdFluxGraphLSTM
  n_hidden: 128
  n_fc_layers: 2
  n_lstm_layers: 1
  dropout_p: 0.25
  lr: 5.0e-05
  lr_decay: 200
  lr_gamma: 0.1
  teacher_forcing_gamma: 0.95
  conservation_constraint: 0.0
  epochs: 200
  horizon: 40
  test_horizon: 64
  fixed_boundary: false
  force_zeros: false
  use_encoder: true
  use_boundary_model: true
  context: 24
  root_transformed_loss: false
  compute_fluxes: true
  batch_size: 8
  boundary_model: Extrapolation
  load_states_from: none
  edge_type: voronoi
  birds_per_km2: false
  n_dummy_radars: 15
action:
  name: train+test
  repeats: 1
hp_search_space:
  n_hidden:
  - 64
  - 128
  - 256
  - 512
  lr:
  - 0.001
  - 0.0005
  - 0.0001
  - 5.0e-05
  - 1.0e-05
  - 5.0e-06
  - 1.0e-06
task:
  name: innerCV
  job_file: scripts/run_inner_cv.job
